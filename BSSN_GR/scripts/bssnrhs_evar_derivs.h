const unsigned int threadOffset = threadID * maxBlockSize * bssn::BSSN_NUM_DERIVS;

double* grad_0_alpha = deriv_base + threadOffset +0 * BLK_SZ;
double* grad_1_alpha = deriv_base + threadOffset +1 * BLK_SZ;
double* grad_2_alpha = deriv_base + threadOffset +2 * BLK_SZ;
double* grad_0_beta0 = deriv_base + threadOffset +3 * BLK_SZ;
double* grad_1_beta0 = deriv_base + threadOffset +4 * BLK_SZ;
double* grad_2_beta0 = deriv_base + threadOffset +5 * BLK_SZ;
double* grad_0_beta1 = deriv_base + threadOffset +6 * BLK_SZ;
double* grad_1_beta1 = deriv_base + threadOffset +7 * BLK_SZ;
double* grad_2_beta1 = deriv_base + threadOffset +8 * BLK_SZ;
double* grad_0_beta2 = deriv_base + threadOffset +9 * BLK_SZ;
double* grad_1_beta2 = deriv_base + threadOffset +10 * BLK_SZ;
double* grad_2_beta2 = deriv_base + threadOffset +11 * BLK_SZ;
double* grad_0_B0 = deriv_base + threadOffset +12 * BLK_SZ;
double* grad_1_B0 = deriv_base + threadOffset +13 * BLK_SZ;
double* grad_2_B0 = deriv_base + threadOffset +14 * BLK_SZ;
double* grad_0_B1 = deriv_base + threadOffset +15 * BLK_SZ;
double* grad_1_B1 = deriv_base + threadOffset +16 * BLK_SZ;
double* grad_2_B1 = deriv_base + threadOffset +17 * BLK_SZ;
double* grad_0_B2 = deriv_base + threadOffset +18 * BLK_SZ;
double* grad_1_B2 = deriv_base + threadOffset +19 * BLK_SZ;
double* grad_2_B2 = deriv_base + threadOffset +20 * BLK_SZ;
double* grad_0_chi = deriv_base + threadOffset +21 * BLK_SZ;
double* grad_1_chi = deriv_base + threadOffset +22 * BLK_SZ;
double* grad_2_chi = deriv_base + threadOffset +23 * BLK_SZ;
double* grad_0_Gt0 = deriv_base + threadOffset +24 * BLK_SZ;
double* grad_1_Gt0 = deriv_base + threadOffset +25 * BLK_SZ;
double* grad_2_Gt0 = deriv_base + threadOffset +26 * BLK_SZ;
double* grad_0_Gt1 = deriv_base + threadOffset +27 * BLK_SZ;
double* grad_1_Gt1 = deriv_base + threadOffset +28 * BLK_SZ;
double* grad_2_Gt1 = deriv_base + threadOffset +29 * BLK_SZ;
double* grad_0_Gt2 = deriv_base + threadOffset +30 * BLK_SZ;
double* grad_1_Gt2 = deriv_base + threadOffset +31 * BLK_SZ;
double* grad_2_Gt2 = deriv_base + threadOffset +32 * BLK_SZ;
double* grad_0_K = deriv_base + threadOffset +33 * BLK_SZ;
double* grad_1_K = deriv_base + threadOffset +34 * BLK_SZ;
double* grad_2_K = deriv_base + threadOffset +35 * BLK_SZ;
double* grad_0_gt0 = deriv_base + threadOffset +36 * BLK_SZ;
double* grad_1_gt0 = deriv_base + threadOffset +37 * BLK_SZ;
double* grad_2_gt0 = deriv_base + threadOffset +38 * BLK_SZ;
double* grad_0_gt1 = deriv_base + threadOffset +39 * BLK_SZ;
double* grad_1_gt1 = deriv_base + threadOffset +40 * BLK_SZ;
double* grad_2_gt1 = deriv_base + threadOffset +41 * BLK_SZ;
double* grad_0_gt2 = deriv_base + threadOffset +42 * BLK_SZ;
double* grad_1_gt2 = deriv_base + threadOffset +43 * BLK_SZ;
double* grad_2_gt2 = deriv_base + threadOffset +44 * BLK_SZ;
double* grad_0_gt3 = deriv_base + threadOffset +45 * BLK_SZ;
double* grad_1_gt3 = deriv_base + threadOffset +46 * BLK_SZ;
double* grad_2_gt3 = deriv_base + threadOffset +47 * BLK_SZ;
double* grad_0_gt4 = deriv_base + threadOffset +48 * BLK_SZ;
double* grad_1_gt4 = deriv_base + threadOffset +49 * BLK_SZ;
double* grad_2_gt4 = deriv_base + threadOffset +50 * BLK_SZ;
double* grad_0_gt5 = deriv_base + threadOffset +51 * BLK_SZ;
double* grad_1_gt5 = deriv_base + threadOffset +52 * BLK_SZ;
double* grad_2_gt5 = deriv_base + threadOffset +53 * BLK_SZ;
double* grad_0_At0 = deriv_base + threadOffset +54 * BLK_SZ;
double* grad_1_At0 = deriv_base + threadOffset +55 * BLK_SZ;
double* grad_2_At0 = deriv_base + threadOffset +56 * BLK_SZ;
double* grad_0_At1 = deriv_base + threadOffset +57 * BLK_SZ;
double* grad_1_At1 = deriv_base + threadOffset +58 * BLK_SZ;
double* grad_2_At1 = deriv_base + threadOffset +59 * BLK_SZ;
double* grad_0_At2 = deriv_base + threadOffset +60 * BLK_SZ;
double* grad_1_At2 = deriv_base + threadOffset +61 * BLK_SZ;
double* grad_2_At2 = deriv_base + threadOffset +62 * BLK_SZ;
double* grad_0_At3 = deriv_base + threadOffset +63 * BLK_SZ;
double* grad_1_At3 = deriv_base + threadOffset +64 * BLK_SZ;
double* grad_2_At3 = deriv_base + threadOffset +65 * BLK_SZ;
double* grad_0_At4 = deriv_base + threadOffset +66 * BLK_SZ;
double* grad_1_At4 = deriv_base + threadOffset +67 * BLK_SZ;
double* grad_2_At4 = deriv_base + threadOffset +68 * BLK_SZ;
double* grad_0_At5 = deriv_base + threadOffset +69 * BLK_SZ;
double* grad_1_At5 = deriv_base + threadOffset +70 * BLK_SZ;
double* grad_2_At5 = deriv_base + threadOffset +71 * BLK_SZ;
double* grad2_0_0_gt0 = deriv_base + threadOffset +72 * BLK_SZ;
double* grad2_0_1_gt0 = deriv_base + threadOffset +73 * BLK_SZ;
double* grad2_0_2_gt0 = deriv_base + threadOffset +74 * BLK_SZ;
double* grad2_1_1_gt0 = deriv_base + threadOffset +75 * BLK_SZ;
double* grad2_1_2_gt0 = deriv_base + threadOffset +76 * BLK_SZ;
double* grad2_2_2_gt0 = deriv_base + threadOffset +77 * BLK_SZ;
double* grad2_0_0_gt1 = deriv_base + threadOffset +78 * BLK_SZ;
double* grad2_0_1_gt1 = deriv_base + threadOffset +79 * BLK_SZ;
double* grad2_0_2_gt1 = deriv_base + threadOffset +80 * BLK_SZ;
double* grad2_1_1_gt1 = deriv_base + threadOffset +81 * BLK_SZ;
double* grad2_1_2_gt1 = deriv_base + threadOffset +82 * BLK_SZ;
double* grad2_2_2_gt1 = deriv_base + threadOffset +83 * BLK_SZ;
double* grad2_0_0_gt2 = deriv_base + threadOffset +84 * BLK_SZ;
double* grad2_0_1_gt2 = deriv_base + threadOffset +85 * BLK_SZ;
double* grad2_0_2_gt2 = deriv_base + threadOffset +86 * BLK_SZ;
double* grad2_1_1_gt2 = deriv_base + threadOffset +87 * BLK_SZ;
double* grad2_1_2_gt2 = deriv_base + threadOffset +88 * BLK_SZ;
double* grad2_2_2_gt2 = deriv_base + threadOffset +89 * BLK_SZ;
double* grad2_0_0_gt3 = deriv_base + threadOffset +90 * BLK_SZ;
double* grad2_0_1_gt3 = deriv_base + threadOffset +91 * BLK_SZ;
double* grad2_0_2_gt3 = deriv_base + threadOffset +92 * BLK_SZ;
double* grad2_1_1_gt3 = deriv_base + threadOffset +93 * BLK_SZ;
double* grad2_1_2_gt3 = deriv_base + threadOffset +94 * BLK_SZ;
double* grad2_2_2_gt3 = deriv_base + threadOffset +95 * BLK_SZ;
double* grad2_0_0_gt4 = deriv_base + threadOffset +96 * BLK_SZ;
double* grad2_0_1_gt4 = deriv_base + threadOffset +97 * BLK_SZ;
double* grad2_0_2_gt4 = deriv_base + threadOffset +98 * BLK_SZ;
double* grad2_1_1_gt4 = deriv_base + threadOffset +99 * BLK_SZ;
double* grad2_1_2_gt4 = deriv_base + threadOffset +100 * BLK_SZ;
double* grad2_2_2_gt4 = deriv_base + threadOffset +101 * BLK_SZ;
double* grad2_0_0_gt5 = deriv_base + threadOffset +102 * BLK_SZ;
double* grad2_0_1_gt5 = deriv_base + threadOffset +103 * BLK_SZ;
double* grad2_0_2_gt5 = deriv_base + threadOffset +104 * BLK_SZ;
double* grad2_1_1_gt5 = deriv_base + threadOffset +105 * BLK_SZ;
double* grad2_1_2_gt5 = deriv_base + threadOffset +106 * BLK_SZ;
double* grad2_2_2_gt5 = deriv_base + threadOffset +107 * BLK_SZ;
double* grad2_0_0_chi = deriv_base + threadOffset +108 * BLK_SZ;
double* grad2_0_1_chi = deriv_base + threadOffset +109 * BLK_SZ;
double* grad2_0_2_chi = deriv_base + threadOffset +110 * BLK_SZ;
double* grad2_1_1_chi = deriv_base + threadOffset +111 * BLK_SZ;
double* grad2_1_2_chi = deriv_base + threadOffset +112 * BLK_SZ;
double* grad2_2_2_chi = deriv_base + threadOffset +113 * BLK_SZ;
double* grad2_0_0_alpha = deriv_base + threadOffset +114 * BLK_SZ;
double* grad2_0_1_alpha = deriv_base + threadOffset +115 * BLK_SZ;
double* grad2_0_2_alpha = deriv_base + threadOffset +116 * BLK_SZ;
double* grad2_1_1_alpha = deriv_base + threadOffset +117 * BLK_SZ;
double* grad2_1_2_alpha = deriv_base + threadOffset +118 * BLK_SZ;
double* grad2_2_2_alpha = deriv_base + threadOffset +119 * BLK_SZ;
double* grad2_0_0_beta0 = deriv_base + threadOffset +120 * BLK_SZ;
double* grad2_0_1_beta0 = deriv_base + threadOffset +121 * BLK_SZ;
double* grad2_0_2_beta0 = deriv_base + threadOffset +122 * BLK_SZ;
double* grad2_1_1_beta0 = deriv_base + threadOffset +123 * BLK_SZ;
double* grad2_1_2_beta0 = deriv_base + threadOffset +124 * BLK_SZ;
double* grad2_2_2_beta0 = deriv_base + threadOffset +125 * BLK_SZ;
double* grad2_0_0_beta1 = deriv_base + threadOffset +126 * BLK_SZ;
double* grad2_0_1_beta1 = deriv_base + threadOffset +127 * BLK_SZ;
double* grad2_0_2_beta1 = deriv_base + threadOffset +128 * BLK_SZ;
double* grad2_1_1_beta1 = deriv_base + threadOffset +129 * BLK_SZ;
double* grad2_1_2_beta1 = deriv_base + threadOffset +130 * BLK_SZ;
double* grad2_2_2_beta1 = deriv_base + threadOffset +131 * BLK_SZ;
double* grad2_0_0_beta2 = deriv_base + threadOffset +132 * BLK_SZ;
double* grad2_0_1_beta2 = deriv_base + threadOffset +133 * BLK_SZ;
double* grad2_0_2_beta2 = deriv_base + threadOffset +134 * BLK_SZ;
double* grad2_1_1_beta2 = deriv_base + threadOffset +135 * BLK_SZ;
double* grad2_1_2_beta2 = deriv_base + threadOffset +136 * BLK_SZ;
double* grad2_2_2_beta2 = deriv_base + threadOffset +137 * BLK_SZ;
